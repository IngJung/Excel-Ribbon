Public nBorderType As Integer

Sub NoGrid()
'
' Removes gridlines from the workbook
'
    Dim WrkBk As Workbook
    Dim WrkSht, ActWin As Worksheet
    Dim i As Integer
    
    Set WrkBk = ActiveWorkbook
    Set ActWin = ActiveSheet
    
    If ActiveWindow.DisplayGridlines = False Then
        For Each WrkSht In WrkBk.Worksheets
            WrkSht.Activate
            ActiveWindow.DisplayGridlines = True
        Next WrkSht
    Else
        For Each WrkSht In WrkBk.Worksheets
            WrkSht.Activate
            ActiveWindow.DisplayGridlines = False
        Next WrkSht
    End If
    
    ActWin.Activate

End Sub

Sub FormatUnits()
'
'Format
'
    Selection.Style = "Comma"
    Selection.NumberFormat = "#,##0;[Red](#,##0);""-"""
    'Selection.Columns.AutoFit
    
End Sub

Sub FormatThousands()
'
'Format
'
    Selection.Style = "Comma"
    Selection.NumberFormat = "#,##0,;[Red](#,##0,);""-"""
    'Selection.Columns.AutoFit
End Sub

Sub FormatMillions()
'
'Format
'
    Selection.Style = "Comma"
    Selection.NumberFormat = "#,##0,,;[Red](#,##0,,);""-"""
    'Selection.Columns.AutoFit
End Sub

Sub FormatPercentage()
'
'Format
'
    'Selection.Style = "Comma"
    Selection.NumberFormat = "0.00%;[Red](0.00%);""-"""
    'Selection.Columns.AutoFit
End Sub


Sub FormatCheck()
    
    Dim rCell As Range
    
    For Each rCell In Selection
        rCell.Select
            With Selection
                .FormatConditions.Add Type:=xlExpression, Formula1:= _
                  "=(" & Selection.Address(False, False) & "=0)"
                With .FormatConditions(.FormatConditions.Count)
                    .SetFirstPriority
                    With .Interior
                        .Pattern = xlSolid
                        .PatternColorIndex = xlAutomatic
                        .Color = RGB(169, 208, 142)
                        .TintAndShade = 0
                        .PatternTintAndShade = 0
                    End With
                    With .Font
                        .ColorIndex = xlAutomatic
                        .TintAndShade = 0
                        .Bold = False
                    End With
                    Selection.Style = "Comma"
                    Selection.NumberFormat = "#,##0;(#,##0);""-"""
                End With
            End With
            With Selection
                .FormatConditions.Add Type:=xlExpression, Formula1:= _
                  "=(" & Selection.Address(False, False) & "<>0)"
                With .FormatConditions(.FormatConditions.Count)
                    .SetFirstPriority
                    With .Interior
                        .Pattern = xlSolid
                        .PatternColorIndex = xlAutomatic
                        .Color = 6118909
                        .TintAndShade = 0
                        .PatternTintAndShade = 0
                    End With
                    With .Font
                        .ThemeColor = xlThemeColorDark1
                        .TintAndShade = 0
                        .Bold = True
                    End With
                    Selection.Style = "Comma"
                    Selection.NumberFormat = "#,##0;(#,##0);""-"""
                End With
            End With
        Next rCell
End Sub

Sub CAS()
    If Selection.HorizontalAlignment = xlCenterAcrossSelection Then
        Selection.HorizontalAlignment = xlGeneral
    Else
        Selection.HorizontalAlignment = xlCenterAcrossSelection
    End If
End Sub

Sub TogglePrint()
    If ActiveSheet.DisplayPageBreaks = True Then
        ActiveSheet.DisplayPageBreaks = False
    End If
End Sub

Sub FormatBorders()
'
'Formats the borders in a project
'
    Dim rSel As Range
    
    Select Case nBorderType
        Case Is = 0
            nBorderType = 1
        Case Is = 1
            nBorderType = 2
        Case Is = 2
            nBorderType = 0
    End Select
    
    Set rSel = Selection
    
    rSel.Borders(xlDiagonalDown).LineStyle = xlNone
    rSel.Borders(xlDiagonalUp).LineStyle = xlNone
    rSel.Borders(xlEdgeLeft).LineStyle = xlNone
    rSel.Borders(xlEdgeTop).LineStyle = xlNone
    rSel.Borders(xlEdgeBottom).LineStyle = xlNone
    rSel.Borders(xlEdgeRight).LineStyle = xlNone
    rSel.Borders(xlInsideVertical).LineStyle = xlNone
    rSel.Borders(xlInsideHorizontal).LineStyle = xlNone
    rSel.Borders(xlDiagonalDown).LineStyle = xlNone
    rSel.Borders(xlDiagonalUp).LineStyle = xlNone
    
    If nBorderType = 0 Then
        With rSel.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = -0.499984740745262
            .Weight = xlThin
        End With
        With rSel.Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = -0.499984740745262
            .Weight = xlThin
        End With
        With rSel.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = -0.499984740745262
            .Weight = xlThin
        End With
        With rSel.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .ThemeColor = 1
            .TintAndShade = -0.499984740745262
            .Weight = xlThin
        End With
    ElseIf nBorderType = 1 Then
        With rSel.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With rSel.Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With rSel.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With rSel.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
    ElseIf nBorderType = 2 Then
        With rSel.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlMedium
        End With
        With rSel.Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlMedium
        End With
        With rSel.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlMedium
        End With
        With rSel.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlMedium
        End With
    End If

End Sub
